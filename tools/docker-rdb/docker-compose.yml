version: '3'
services:
    mssql:
        image: microsoft/mssql-server-linux:latest 
        container_name: mssql
        ports:
            - "1433:1433"
        environment:
            - SA_PASSWORD=Password1234
            - ACCEPT_EULA=Y
        volumes:
            - ./mssql/script:/usr/src/app
        command: ["sh","-c","chmod +x /usr/src/app/entrypoint.sh; /usr/src/app/entrypoint.sh & /opt/mssql/bin/sqlservr;"]
        healthcheck:
            test: [ "CMD", "sqlcmd", "-U", "sa", "-P", "Password1234", "-Q", "select 1" ]
            interval: 5s
            timeout: 10s
            retries: 1800 

    oracle:
        image: wnameless/oracle-xe-11g:latest
        container_name: oracle
        ports:
            - "1521:1521"
            - "1520:8080"
        environment:
            - ORACLE_ALLOW_REMOTE=true
            - username=system
            - password=oracle
            - sid=xe
        volumes:
            - ./oracle/script:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/apex"]
            interval: 5s
            timeout: 3s

    mysql:
        image: mysql:5.7
        container_name: mysql
        command: --lower_case_table_names=1
        environment:
            - TZ=Asia/Seoul
            - MYSQL_USER=mysql
            - MYSQL_PASSWORD=mtsql
            - MYSQL_DATABASE=sample
        ports:
            - "3306:3306"
        volumes:
            - ./mysql/script/init.sql:/docker-entrypoint-initdb.d/init.sql
        healthcheck:
            test: ["CMD-SHELL", 'mysqladmin ping']
            interval: 10s
            timeout: 2s
            retries: 5 
      
    db2:
        image: ibmcom/db2express-c:latest
        container_name: db2
        environment:
            DB2INST1_PASSWORD: db2inst1_password
            LICENSE: accept
        volumes:
            - ./db2/script:/home/db2inst1/script
            - ./db2/data:/share
        entrypoint: /home/db2inst1/script/entrypoint.sh
        ports:
            - "3051:3050"
            - "50000:50000"
        command: db2sampl

    postgreSQL:
        restart: always
        image: postgres:latest
        container_name: postgres
        environment:
            - POSTGRES_USER=postgre
            - POSTGRES_PASSWORD=postgre
            - POSTGRES_DB=sample
        volumes:
            - ./postgreSQL/script/init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./postgreSQL/data:/var/lib/postgresql
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5